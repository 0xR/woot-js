{"version":3,"sources":["woot.js"],"names":[],"mappings":"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","file":"woot.js","sourcesContent":["import R from 'ramda';\n\n\nimport Core from './woot/core';\nimport Operation from './woot/operation';\nimport WChar from './woot/wchar';\nimport WString from './woot/wstring';\n\n\n// incClock :: WootClient -> WootClient\nconst incClock = R.evolve({clock: R.inc});\n\n\n// showClientString :: WootClient -> String\nconst showClientString = R.compose(\n  WString.show,\n  R.prop('wString')\n);\n\n\n// TODO: should this check if the client id already exists in the provided string\n// and then start the client clock at the correct value?\n// makeWootClient :: WString -> ClientId -> WootClient\nconst makeWootClient = R.curry((wString, clientId) => {\n  return {\n    clientId,\n    clock: 0,\n    wString,\n    operationQueue: []\n  };\n});\n\n\n// makeWootClientEmpty :: ClientId -> WootClient\nconst makeWootClientEmpty = (id) => makeWootClient(WString.makeEmptyWString(), id);\n\n\n// updateOperationQueue :: [Operation] -> WootClient -> WootClient\nconst updateOperationQueue = R.assoc('operationQueue');\n\n// updateWString :: WString -> WootClient -> WootClient\nconst updateWString = R.assoc('wString');\n\n\n// sends an operation to a woot client, returning a new woot client\n// the operation will either be integrated into the woot client's string\n// or it will be added to the client's interal operation queue to be tried again\n// sendOperation :: WootClient -> Operation -> WootClient\nconst sendOperation = (client, operation) => {\n  const operations = R.append(operation, client.operationQueue);\n  const result = Core.integrateAll(operations, client.wString);\n\n  return updateWString(result.wString,\n    updateOperationQueue(result.operations, client)\n  );\n};\n\n\n// sendOperations :: WootClient -> [Operation] -> WootClient\nconst sendOperations = R.reduce(sendOperation);\n\n\n// identical to sendOperation, but increments the clients internal clock\n// not exposed - consumers should use sendLocalDelete or sendLocalInsert\n// sendLocalOperation :: WootClient -> Operation -> WootClient\n// TODO: refactor with sendOperations - lots of similar functionality\nconst sendLocalOperation = (client, operation) => {\n  const operations = R.append(operation, client.operationQueue);\n  const result = Core.integrateAllLocal(operations, client.wString);\n\n  return incClock(\n    updateWString(result.wString,\n      updateOperationQueue(result.operations, client)\n    )\n  );\n};\n\n\n// -- note: failed local operations can result in no-ops if the underlying operation is invalid\n// -- they will not be added to a client's operation queue\n// -- the assumption is that anything done locally should already be verified\n// -- if the local operation was successful, the operation should be broadcasted to other clients\n// sendLocalDelete :: WootClient -> Int -> {operation: Operation | null, client: WootClient}\nconst sendLocalDelete = (client, position) => {\n  const maybeOp = Core.makeDeleteOperation(client.clientId, position, client.wString);\n\n  return {\n    operation: maybeOp,\n    client: maybeOp ? sendLocalOperation(client, maybeOp) : client\n  };\n};\n\n\n// sendLocalInsert :: WootClient -> Int -> Char -> {operation: Operation | null, client: WootClient}\nconst sendLocalInsert = (client, position, alpha) => {\n  const wCharId = WChar.makeWCharId(client.clientId, client.clock);\n  const maybeOp = Core.makeInsertOperation(wCharId, position, alpha, client.wString);\n\n  return {\n    operation: maybeOp,\n    client: maybeOp ? sendLocalOperation(client, maybeOp) : client\n  };\n};\n\n\nexport default {\n  // Construction\n  makeWootClient,\n  makeWootClientEmpty,\n\n  // Operation Handling\n  sendOperation,\n  sendOperations,\n  sendLocalDelete,\n  sendLocalInsert,\n\n  // Utility functions\n  showClientString,\n\n  // Re-export sub modules\n  WString,\n  WChar,\n  Operation,\n\n  // meta meta\n  __version: '0.0.5'\n};\n"],"sourceRoot":"/source/"}