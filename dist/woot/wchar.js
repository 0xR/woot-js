// module Data.Woot.WChar
//     ( WChar(..)
//     , wCharBeginning
//     , wCharEnding
//     , hide
//     , ClientId
//     , WCharId(..)
//     ) where
//
//
// data WChar = WChar
//     { wCharId      :: WCharId
//     , wCharVisible :: Bool
//     , wCharAlpha   :: Char
//     , wCharPrevId  :: WCharId
//     , wCharNextId  :: WCharId
//     } deriving (Eq, Show)

'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _ramda = require('ramda');

var _ramda2 = _interopRequireDefault(_ramda);

var _oValidator = require('o-validator');

var _oValidator2 = _interopRequireDefault(_oValidator);

var wCharIdSchema = {
  clientId: _oValidator2['default'].required(_ramda2['default'].is(Number)),
  clock: _oValidator2['default'].required(_ramda2['default'].is(Number))
};

var wCharSchema = {
  id: _oValidator2['default'].required(_oValidator2['default'].validate(wCharIdSchema)),
  isVisible: _oValidator2['default'].required(_ramda2['default'].is(Boolean)),
  alpha: _oValidator2['default'].required(_ramda2['default'].is(String)),
  prevId: _oValidator2['default'].required(_oValidator2['default'].validate(wCharIdSchema)),
  nextId: _oValidator2['default'].required(_oValidator2['default'].validate(wCharIdSchema))
};

var makeWChar = _oValidator2['default'].validateOrThrow(wCharSchema);

var wCharIdBeginning = { clientId: -1, clock: 0 };
var wCharIdEnding = { clientId: -1, clock: 1 };

// -- special character to mark the beginning of a wString
// -- note: clientId of -1 denotes a special character generated by this library
// -- includes a self-referential 'prevId' field
var wCharBeginning = makeWChar({
  id: wCharIdBeginning,
  isVisible: false,
  alpha: ' ',
  prevId: wCharIdBeginning,
  nextId: wCharIdEnding
});

// -- special character to mark the ending of a wString
// -- note: clientId of -1 denotes a special character generated by this library
// -- includes a self-referential 'nextId' field
var wCharEnding = makeWChar({
  id: wCharIdEnding,
  isVisible: false,
  alpha: ' ',
  prevId: wCharIdBeginning,
  nextId: wCharIdEnding
});

//
// hide :: WChar -> WChar
// hide wc = wc {wCharVisible = False}
//
//
// type ClientId = Int
//
//
// data WCharId = WCharId
//     { wCharIdClientId :: ClientId
//     , wCharIdClock    :: Int
//     } deriving (Eq, Show)
//
//
// instance Ord WCharId where
//     compare = compareCharIds
//
//
// compareCharIds :: WCharId -> WCharId -> Ordering
// compareCharIds (WCharId cA iA) (WCharId cB iB) = compare (cA, iA) (cB, iB)
//
//
// wCharIdBeginning :: WCharId
// wCharIdBeginning = WCharId (-1) 0
//
//
// wCharIdEnding :: WCharId
// wCharIdEnding = WCharId (-1) 1

exports['default'] = {
  makeWChar: makeWChar,
  wCharBeginning: wCharBeginning,
  wCharEnding: wCharEnding
};
module.exports = exports['default'];
//# sourceMappingURL=../woot/wchar.js.map