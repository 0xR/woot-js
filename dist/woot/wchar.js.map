{"version":3,"sources":["woot/wchar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;qBAkBc,OAAO;;;;AAErB,IAAM,SAAS,GAAG,mBAAE,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBA4Cd;AACb,WAAS,EAAT,SAAS;CACV","file":"woot/wchar.js","sourcesContent":["// module Data.Woot.WChar\n//     ( WChar(..)\n//     , wCharBeginning\n//     , wCharEnding\n//     , hide\n//     , ClientId\n//     , WCharId(..)\n//     ) where\n//\n//\n// data WChar = WChar\n//     { wCharId      :: WCharId\n//     , wCharVisible :: Bool\n//     , wCharAlpha   :: Char\n//     , wCharPrevId  :: WCharId\n//     , wCharNextId  :: WCharId\n//     } deriving (Eq, Show)\n\nimport R from 'ramda';\n\nconst makeWChar = R.identity;\n//\n// -- special character to mark the beginning of a wString\n// -- note: clientId of -1 denotes a special character generated by this library\n// -- includes a self-referential 'prevId' field\n// wCharBeginning :: WChar\n// wCharBeginning = WChar wCharIdBeginning False ' ' wCharIdBeginning wCharIdEnding\n//\n//\n// -- special character to mark the ending of a wString\n// -- note: clientId of -1 denotes a special character generated by this library\n// -- includes a self-referential 'nextId' field\n// wCharEnding :: WChar\n// wCharEnding = WChar wCharIdEnding False ' ' wCharIdBeginning wCharIdEnding\n//\n//\n// hide :: WChar -> WChar\n// hide wc = wc {wCharVisible = False}\n//\n//\n// type ClientId = Int\n//\n//\n// data WCharId = WCharId\n//     { wCharIdClientId :: ClientId\n//     , wCharIdClock    :: Int\n//     } deriving (Eq, Show)\n//\n//\n// instance Ord WCharId where\n//     compare = compareCharIds\n//\n//\n// compareCharIds :: WCharId -> WCharId -> Ordering\n// compareCharIds (WCharId cA iA) (WCharId cB iB) = compare (cA, iA) (cB, iB)\n//\n//\n// wCharIdBeginning :: WCharId\n// wCharIdBeginning = WCharId (-1) 0\n//\n//\n// wCharIdEnding :: WCharId\n// wCharIdEnding = WCharId (-1) 1\n\nexport default {\n  makeWChar\n};\n"],"sourceRoot":"/source/"}