{"version":3,"sources":["woot/wchar.js"],"names":[],"mappings":";;;;;;;;qBAAc,OAAO;;;;0BACP,aAAa;;;;AAG3B,IAAM,aAAa,GAAG;AACpB,UAAQ,EAAE,wBAAE,QAAQ,CAAC,mBAAE,EAAE,CAAC,MAAM,CAAC,CAAC;AAClC,OAAK,EAAE,wBAAE,QAAQ,CAAC,mBAAE,EAAE,CAAC,MAAM,CAAC,CAAC;CAChC,CAAC;;AAGF,IAAM,WAAW,GAAG;AAClB,IAAE,EAAE,wBAAE,QAAQ,CAAC,wBAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;AACzC,WAAS,EAAE,wBAAE,QAAQ,CAAC,mBAAE,EAAE,CAAC,OAAO,CAAC,CAAC;AACpC,OAAK,EAAE,wBAAE,QAAQ,CAAC,mBAAE,EAAE,CAAC,MAAM,CAAC,CAAC;AAC/B,QAAM,EAAE,wBAAE,QAAQ,CAAC,wBAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;AAC7C,QAAM,EAAE,wBAAE,QAAQ,CAAC,wBAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;CAC9C,CAAC;;;AAIF,IAAM,SAAS,GAAG,wBAAE,eAAe,CAAC,WAAW,CAAC,CAAC;;;AAIjD,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,QAAQ,EAAE,KAAK,EAAK;AACvC,SAAO,wBAAE,eAAe,CAAC,aAAa,EAAE;AACtC,YAAQ,EAAR,QAAQ,EAAE,KAAK,EAAL,KAAK;GAChB,CAAC,CAAC;CACJ,CAAC;;;AAIF,IAAM,gBAAgB,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;AAI5C,IAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;AAOzC,IAAM,cAAc,GAAG,SAAS,CAAC;AAC/B,IAAE,EAAE,gBAAgB;AACpB,WAAS,EAAE,KAAK;AAChB,OAAK,EAAE,GAAG;AACV,QAAM,EAAE,gBAAgB;AACxB,QAAM,EAAE,aAAa;CACtB,CAAC,CAAC;;;;;;AAOH,IAAM,WAAW,GAAG,SAAS,CAAC;AAC5B,IAAE,EAAE,aAAa;AACjB,WAAS,EAAE,KAAK;AAChB,OAAK,EAAE,GAAG;AACV,QAAM,EAAE,gBAAgB;AACxB,QAAM,EAAE,aAAa;CACtB,CAAC,CAAC;;;AAIH,IAAM,IAAI,GAAG,mBAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;;AAIzC,IAAM,eAAe,GAAG,mBAAE,UAAU,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjD,MAAI,GAAG,CAAC,QAAQ,KAAK,GAAG,CAAC,QAAQ,EAAE;AACjC,WAAO,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;GAC9B;;AAED,SAAO,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;CACpC,CAAC,CAAC;;qBAGY;AACb,WAAS,EAAT,SAAS;AACT,aAAW,EAAX,WAAW;AACX,gBAAc,EAAd,cAAc;AACd,aAAW,EAAX,WAAW;AACX,MAAI,EAAJ,IAAI;AACJ,iBAAe,EAAf,eAAe;AACf,aAAW,EAAX,WAAW;CACZ","file":"woot/wchar.js","sourcesContent":["import R from 'ramda';\nimport V from 'o-validator';\n\n\nconst wCharIdSchema = {\n  clientId: V.required(R.is(Number)),\n  clock: V.required(R.is(Number))\n};\n\n\nconst wCharSchema = {\n  id: V.required(V.validate(wCharIdSchema)),\n  isVisible: V.required(R.is(Boolean)),\n  alpha: V.required(R.is(String)),\n  prevId: V.required(V.validate(wCharIdSchema)),\n  nextId: V.required(V.validate(wCharIdSchema))\n};\n\n\n// makeWCharId :: {k: a} -> WCharId\nconst makeWChar = V.validateOrThrow(wCharSchema);\n\n\n// makeWCharId :: Int -> Int -> WCharId\nconst makeWCharId = (clientId, clock) => {\n  return V.validateOrThrow(wCharIdSchema, {\n    clientId, clock\n  });\n};\n\n\n// wCharIdBeginning :: WCharId\nconst wCharIdBeginning = makeWCharId(-1, 0);\n\n\n// wCharIdEnding :: WCharId\nconst wCharIdEnding = makeWCharId(-1, 1);\n\n\n// -- special character to mark the beginning of a wString\n// -- note: clientId of -1 denotes a special character generated by this library\n// -- includes a self-referential 'prevId' field\n// wCharBeginning :: WCharId\nconst wCharBeginning = makeWChar({\n  id: wCharIdBeginning,\n  isVisible: false,\n  alpha: ' ',\n  prevId: wCharIdBeginning,\n  nextId: wCharIdEnding\n});\n\n\n// -- special character to mark the ending of a wString\n// -- note: clientId of -1 denotes a special character generated by this library\n// -- includes a self-referential 'nextId' field\n// wCharEnding :: WCharId\nconst wCharEnding = makeWChar({\n  id: wCharIdEnding,\n  isVisible: false,\n  alpha: ' ',\n  prevId: wCharIdBeginning,\n  nextId: wCharIdEnding\n});\n\n\n// hide :: WChar -> WChar\nconst hide = R.assoc('isVisible', false);\n\n\n// compareCharIds :: WCharId -> WCharId -> Ordering (-1, 0, 1)\nconst compareWCharIds = R.comparator((idA, idB) => {\n  if (idA.clientId === idB.clientId) {\n    return idA.clock < idB.clock;\n  }\n\n  return idA.clientId < idB.clientId;\n});\n\n\nexport default {\n  makeWChar,\n  makeWCharId,\n  wCharBeginning,\n  wCharEnding,\n  hide,\n  compareWCharIds,\n  wCharSchema\n};\n"],"sourceRoot":"/source/"}