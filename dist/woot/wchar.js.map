{"version":3,"sources":["woot/wchar.js"],"names":[],"mappings":";;;;;;;;qBAAc,OAAO;;;;;AAIrB,IAAM,SAAS,GAAG,mBAAE,QAAQ,CAAC;;;AAI7B,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,QAAQ,EAAE,KAAK,EAAK;AACvC,SAAO,EAAC,QAAQ,EAAR,QAAQ,EAAE,KAAK,EAAL,KAAK,EAAC,CAAC;CAC1B,CAAC;;;AAIF,IAAM,gBAAgB,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;AAI5C,IAAM,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;AAOzC,IAAM,cAAc,GAAG,SAAS,CAAC;AAC/B,IAAE,EAAE,gBAAgB;AACpB,WAAS,EAAE,KAAK;AAChB,OAAK,EAAE,GAAG;AACV,QAAM,EAAE,gBAAgB;AACxB,QAAM,EAAE,aAAa;CACtB,CAAC,CAAC;;;;;;AAOH,IAAM,WAAW,GAAG,SAAS,CAAC;AAC5B,IAAE,EAAE,aAAa;AACjB,WAAS,EAAE,KAAK;AAChB,OAAK,EAAE,GAAG;AACV,QAAM,EAAE,gBAAgB;AACxB,QAAM,EAAE,aAAa;CACtB,CAAC,CAAC;;;AAIH,IAAM,IAAI,GAAG,mBAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;;AAIzC,IAAM,eAAe,GAAG,SAAlB,eAAe,CAAI,GAAG,EAAE,GAAG,EAAK;AACpC,MAAI,GAAG,CAAC,QAAQ,KAAK,GAAG,CAAC,QAAQ,EAAE;AACjC,QAAI,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE;AAC3B,aAAO,CAAC,CAAC;KACV;;AAED,WAAO,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;GACvC;;AAED,SAAO,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;CAC7C,CAAC;;qBAGa;AACb,WAAS,EAAT,SAAS;AACT,aAAW,EAAX,WAAW;AACX,gBAAc,EAAd,cAAc;AACd,aAAW,EAAX,WAAW;AACX,MAAI,EAAJ,IAAI;AACJ,iBAAe,EAAf,eAAe;CAChB","file":"woot/wchar.js","sourcesContent":["import R from 'ramda';\n\n\n// makeWCharId :: {k: a} -> WCharId\nconst makeWChar = R.identity;\n\n\n// makeWCharId :: Int -> Int -> WCharId\nconst makeWCharId = (clientId, clock) => {\n  return {clientId, clock};\n};\n\n\n// wCharIdBeginning :: WCharId\nconst wCharIdBeginning = makeWCharId(-1, 0);\n\n\n// wCharIdEnding :: WCharId\nconst wCharIdEnding = makeWCharId(-1, 1);\n\n\n// -- special character to mark the beginning of a wString\n// -- note: clientId of -1 denotes a special character generated by this library\n// -- includes a self-referential 'prevId' field\n// wCharBeginning :: WCharId\nconst wCharBeginning = makeWChar({\n  id: wCharIdBeginning,\n  isVisible: false,\n  alpha: ' ',\n  prevId: wCharIdBeginning,\n  nextId: wCharIdEnding\n});\n\n\n// -- special character to mark the ending of a wString\n// -- note: clientId of -1 denotes a special character generated by this library\n// -- includes a self-referential 'nextId' field\n// wCharEnding :: WCharId\nconst wCharEnding = makeWChar({\n  id: wCharIdEnding,\n  isVisible: false,\n  alpha: ' ',\n  prevId: wCharIdBeginning,\n  nextId: wCharIdEnding\n});\n\n\n// hide :: WChar -> WChar\nconst hide = R.assoc('isVisible', false);\n\n\n// compareCharIds :: WCharId -> WCharId -> Ordering (-1, 0, 1)\nconst compareWCharIds = (idA, idB) => {\n  if (idA.clientId === idB.clientId) {\n    if (idA.clock === idB.clock) {\n      return 0;\n    }\n\n    return idA.clock < idB.clock ? -1 : 1;\n  }\n\n  return idA.clientId < idB.clientId ? -1 : 1;\n};\n\n\nexport default {\n  makeWChar,\n  makeWCharId,\n  wCharBeginning,\n  wCharEnding,\n  hide,\n  compareWCharIds\n};\n"],"sourceRoot":"/source/"}